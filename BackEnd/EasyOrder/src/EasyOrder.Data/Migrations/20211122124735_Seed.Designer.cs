// <auto-generated />
using System;
using EasyOrder.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EasyOrder.Data.Migrations
{
    [DbContext(typeof(EasyOrderContext))]
    [Migration("20211122124735_Seed")]
    partial class Seed
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.10")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.HasSequence<int>("NumberOrder")
                .HasMin(1L);

            modelBuilder.HasSequence<int>("ProductCode")
                .HasMin(1L);

            modelBuilder.Entity("EasyOrder.Business.Models.Category", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36320cd1-6cce-42b0-8940-02c887431a57"),
                            Active = true,
                            Name = "Pasteis"
                        },
                        new
                        {
                            Id = new Guid("dccbc2dd-1621-4654-b3f8-74fc917cbd41"),
                            Active = true,
                            Name = "Pizza"
                        },
                        new
                        {
                            Id = new Guid("3c9e8004-f3f6-49d2-8568-deb44f3fb267"),
                            Active = true,
                            Name = "Burguers"
                        });
                });

            modelBuilder.Entity("EasyOrder.Business.Models.CategoryExtra", b =>
                {
                    b.Property<Guid>("IdCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExtra")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdCategory", "IdExtra");

                    b.HasIndex("IdExtra");

                    b.ToTable("CategoryExtras");

                    b.HasData(
                        new
                        {
                            IdCategory = new Guid("36320cd1-6cce-42b0-8940-02c887431a57"),
                            IdExtra = new Guid("53634a9a-7ebd-48af-979f-b08bf7d0e217")
                        },
                        new
                        {
                            IdCategory = new Guid("dccbc2dd-1621-4654-b3f8-74fc917cbd41"),
                            IdExtra = new Guid("53634a9a-7ebd-48af-979f-b08bf7d0e217")
                        },
                        new
                        {
                            IdCategory = new Guid("36320cd1-6cce-42b0-8940-02c887431a57"),
                            IdExtra = new Guid("265f34a4-1535-449b-acdf-6730c4443e73")
                        },
                        new
                        {
                            IdCategory = new Guid("3c9e8004-f3f6-49d2-8568-deb44f3fb267"),
                            IdExtra = new Guid("265f34a4-1535-449b-acdf-6730c4443e73")
                        },
                        new
                        {
                            IdCategory = new Guid("dccbc2dd-1621-4654-b3f8-74fc917cbd41"),
                            IdExtra = new Guid("7a77ed51-cdd6-4fcb-8f1d-85a1f92be96c")
                        });
                });

            modelBuilder.Entity("EasyOrder.Business.Models.Extra", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.HasKey("Id");

                    b.ToTable("Extras");

                    b.HasData(
                        new
                        {
                            Id = new Guid("53634a9a-7ebd-48af-979f-b08bf7d0e217"),
                            Active = true,
                            Name = "Queijo"
                        },
                        new
                        {
                            Id = new Guid("265f34a4-1535-449b-acdf-6730c4443e73"),
                            Active = true,
                            Name = "Bacon"
                        },
                        new
                        {
                            Id = new Guid("7a77ed51-cdd6-4fcb-8f1d-85a1f92be96c"),
                            Active = true,
                            Name = "Orégano"
                        });
                });

            modelBuilder.Entity("EasyOrder.Business.Models.Item", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdOrder")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdProduct")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Observation")
                        .HasColumnType("varchar(1000)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdOrder");

                    b.HasIndex("IdProduct");

                    b.ToTable("Items");

                    b.HasData(
                        new
                        {
                            Id = new Guid("ce9a2ad2-f00f-4baa-8709-58f3ab1d71bb"),
                            IdOrder = new Guid("b699095c-d87c-4ff2-bce5-f1f1c0bae9b6"),
                            IdProduct = new Guid("7c378c3b-b5f5-4ee3-8f1d-5ff73a89b7c1"),
                            Quantity = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("2aea14eb-dd41-4ce6-ba90-ad3a82553e25"),
                            IdOrder = new Guid("b699095c-d87c-4ff2-bce5-f1f1c0bae9b6"),
                            IdProduct = new Guid("3e8d9a71-0bbd-425f-bcc5-fb36048ef62c"),
                            Quantity = 2,
                            Status = 1
                        },
                        new
                        {
                            Id = new Guid("b9d81522-7e29-47b1-bc63-b80fa6241872"),
                            IdOrder = new Guid("ce9a2ad2-f00f-4baa-8709-58f3ab1d71bb"),
                            IdProduct = new Guid("eef85ecb-c7ff-46c6-89a8-345ab93669a6"),
                            Quantity = 2,
                            Status = 1
                        });
                });

            modelBuilder.Entity("EasyOrder.Business.Models.ItemExtra", b =>
                {
                    b.Property<Guid>("IdItem")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdExtra")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("IdItem", "IdExtra");

                    b.HasIndex("IdExtra");

                    b.ToTable("ItemExtras");

                    b.HasData(
                        new
                        {
                            IdItem = new Guid("ce9a2ad2-f00f-4baa-8709-58f3ab1d71bb"),
                            IdExtra = new Guid("53634a9a-7ebd-48af-979f-b08bf7d0e217")
                        },
                        new
                        {
                            IdItem = new Guid("2aea14eb-dd41-4ce6-ba90-ad3a82553e25"),
                            IdExtra = new Guid("53634a9a-7ebd-48af-979f-b08bf7d0e217")
                        },
                        new
                        {
                            IdItem = new Guid("b9d81522-7e29-47b1-bc63-b80fa6241872"),
                            IdExtra = new Guid("7a77ed51-cdd6-4fcb-8f1d-85a1f92be96c")
                        });
                });

            modelBuilder.Entity("EasyOrder.Business.Models.Order", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("Discount")
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<int>("Number")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR NumberOrder");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("Subtotal")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Table")
                        .HasColumnType("int");

                    b.Property<decimal>("Total")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.ToTable("Orders");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b699095c-d87c-4ff2-bce5-f1f1c0bae9b6"),
                            Discount = 0m,
                            Name = "Snow",
                            Number = 0,
                            Status = 1,
                            Subtotal = 0m,
                            Table = 1,
                            Total = 0m
                        },
                        new
                        {
                            Id = new Guid("ce9a2ad2-f00f-4baa-8709-58f3ab1d71bb"),
                            Discount = 0m,
                            Name = "Salem",
                            Number = 0,
                            Status = 1,
                            Subtotal = 0m,
                            Table = 2,
                            Total = 0m
                        });
                });

            modelBuilder.Entity("EasyOrder.Business.Models.Product", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("Active")
                        .HasColumnType("bit");

                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasDefaultValueSql("NEXT VALUE FOR ProductCode");

                    b.Property<string>("Description")
                        .HasColumnType("varchar(1000)");

                    b.Property<Guid>("IdCategory")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("varchar(200)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("IdCategory");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = new Guid("7c378c3b-b5f5-4ee3-8f1d-5ff73a89b7c1"),
                            Active = true,
                            Code = 0,
                            Description = "Pastel de carne muito gostoso",
                            IdCategory = new Guid("36320cd1-6cce-42b0-8940-02c887431a57"),
                            Name = "Pastel de carne",
                            Price = 10m
                        },
                        new
                        {
                            Id = new Guid("3e8d9a71-0bbd-425f-bcc5-fb36048ef62c"),
                            Active = true,
                            Code = 0,
                            Description = "Pastel de quejo muito gostoso",
                            IdCategory = new Guid("36320cd1-6cce-42b0-8940-02c887431a57"),
                            Name = "Pastel de queijo",
                            Price = 15m
                        },
                        new
                        {
                            Id = new Guid("eef85ecb-c7ff-46c6-89a8-345ab93669a6"),
                            Active = true,
                            Code = 0,
                            Description = "Pizza muito gostoso",
                            IdCategory = new Guid("dccbc2dd-1621-4654-b3f8-74fc917cbd41"),
                            Name = "Pizza",
                            Price = 45m
                        });
                });

            modelBuilder.Entity("EasyOrder.Business.Models.CategoryExtra", b =>
                {
                    b.HasOne("EasyOrder.Business.Models.Category", "Category")
                        .WithMany("CategoryExtras")
                        .HasForeignKey("IdCategory")
                        .IsRequired();

                    b.HasOne("EasyOrder.Business.Models.Extra", "Extra")
                        .WithMany("CategoryExtras")
                        .HasForeignKey("IdExtra")
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Extra");
                });

            modelBuilder.Entity("EasyOrder.Business.Models.Item", b =>
                {
                    b.HasOne("EasyOrder.Business.Models.Order", "Order")
                        .WithMany("Items")
                        .HasForeignKey("IdOrder")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyOrder.Business.Models.Product", "Product")
                        .WithMany("Items")
                        .HasForeignKey("IdProduct")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("EasyOrder.Business.Models.ItemExtra", b =>
                {
                    b.HasOne("EasyOrder.Business.Models.Extra", "Extra")
                        .WithMany()
                        .HasForeignKey("IdExtra")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EasyOrder.Business.Models.Item", "Item")
                        .WithMany("ItemExtras")
                        .HasForeignKey("IdItem")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Extra");

                    b.Navigation("Item");
                });

            modelBuilder.Entity("EasyOrder.Business.Models.Product", b =>
                {
                    b.HasOne("EasyOrder.Business.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("IdCategory")
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EasyOrder.Business.Models.Category", b =>
                {
                    b.Navigation("CategoryExtras");
                });

            modelBuilder.Entity("EasyOrder.Business.Models.Extra", b =>
                {
                    b.Navigation("CategoryExtras");
                });

            modelBuilder.Entity("EasyOrder.Business.Models.Item", b =>
                {
                    b.Navigation("ItemExtras");
                });

            modelBuilder.Entity("EasyOrder.Business.Models.Order", b =>
                {
                    b.Navigation("Items");
                });

            modelBuilder.Entity("EasyOrder.Business.Models.Product", b =>
                {
                    b.Navigation("Items");
                });
#pragma warning restore 612, 618
        }
    }
}
